a<-2+3
a
getwd()
MB
inspect(mba)
setwd("C://Users//Arvind//Documents//R")
mb<-read.csv("C://Users//Arvind//Documents//R//mb.csv")
mb$Quantity[mb$Quantity<0]<-
NA
mb$Quantity[mb$Quantity<0]<-NA
mb$UnitPrice[mb$UnitPrice]<-NA
mb$UnitPrice[mb$UnitPrice<0]<-NA
mbc<-na.omit(mb)
setwd("C://Users//Arvind//Documents//R")
mb<-read.csv("C://Users//Arvind//Documents//R//mb.csv")
mb$Quantity[mb$Quantity<0]<-
NA
mb$Quantity[mb$Quantity<0]<-NA
mb$UnitPrice[mb$UnitPrice<0]<-NA
mb$UnitPrice[mb$UnitPrice<0]<-NA
mbc<-na.omit(mb)
mbc2 <- aggregate(Description ~ InvoiceNo, data = mbc, paste, collapse = ",")
write.table(mbc2, file = "mbc2.csv", sep=",")
fix(mbc2)
write.table(mbc2, file = "mbc2.csv", sep=",",col.names = FALSE)
write.table(mbc2, file = "mbc3.csv", sep=",",col.names = FALSE)
write.table(mbc2, file = "mbc3.csv", sep=",",col.names = FALSE,row.names = FALSE)
write.table(mbc2, file = "mbc4.csv", sep=",",col.names = FALSE,row.names = FALSE)
require(arules)
mar<-read.transactions("mbc4.csv",sep = ",")
mar
inspect(mar[1:3])
itemFrequency(mar[,1])
itemFrequencyPlot(mar,support=0.20)
itemFrequencyPlot(mar)
itemFrequencyPlot(mar,support=0.0001)
itemFrequencyPlot(mar,support=0.00001)
itemFrequencyPlot(mar,support=1)
itemFrequencyPlot(mar,support=0.01)
itemFrequencyPlot(mar,topN=5)
itemFrequencyPlot(mar,topN=20)
itemFrequencyPlot(mar,topN=10)
itemFrequencyPlot(mar,topN=17)
itemFrequencyPlot(mar,topN=15)
itemFrequencyPlot(mar,topN=5)
itemFrequencyPlot(mar,topN=5)
mar1<-apriori(mar,parameter = list(support=11400,confidence=0.75,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.11400,confidence=0.75,minlen=2))
mar1
mar1<-apriori(mar,parameter = list(support=0.15200,confidence=0.11400,minlen=2))
summary(mar)
mar1<-apriori(mar)
mar
mar1
mar1<-apriori(mar)
mar
mar1
mar1<-apriori(mar,parameter = list(support=0.8,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.005,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.005,confidence=0.4,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.005,confidence=0.04,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0005,confidence=0.4,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.00005,confidence=0.4,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.005,confidence=0.4,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.05,confidence=0.04,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.005,confidence=0.04,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0005,confidence=0.04,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0005,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0009,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0001,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0003,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0004,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0005,confidence=0.6,minlen=2))
mar1<-apriori(mar,parameter = list(support=0.0002,confidence=0.6,minlen=2))
mar1
summary(mar1)
inspect(mar1[1:3])
inspect(sort(mar1,by="lift")[1:4])
plot(mar1)
library(arulesViz)
plot(mar1)
inspect(sort(mar1,by="support",decreasing = FALSE)[1:4])
?is.redundant
marred<-is.redundant(mar1)
summary(mar1)
summary(marred)
mar1<-mar1[!marred]
mar1
inspect(mar1[1:3])
inspect(mar1[1:10])
inspect(sort(mar1,by="lift")[1:10])
mar1
inspect(sort(mar1,by="lift"))
dev.off()
plot(mar1)
itemFrequencyPlot(mar1,topN=5)
itemFrequencyPlot(mar1,support=0.0003)
itemFrequencyPlot(mar1,topN=10)
itemFrequencyPlot(mab1,topN=10)
itemFrequencyPlot(mab,topN=10)
itemFrequencyPlot(mar,topN=10)
martest<-apriori(mar,parameter = list(support=0.0002,confidence=0.6,minlen=5))
martest
inspect(sort(martest,by="lift"))
plot(mar1)
plot(mar1,method = "grouped")
plot(mar1,method = "graph" control=list(type="Description"))
plot(mar1,method = "graph", control=list(type="Description"))
plot(martest,method = "grouped")
plot(martest,method = "graph", control=list(type="Description"))
martest1<-apriori(mar,parameter = list(support=0.0002,confidence=0.80,minlen=5))
martest1<-apriori(mar,parameter = list(support=0.002,confidence=0.80,minlen=5))
martest1<-apriori(mar,parameter = list(support=0.0010,confidence=0.80,minlen=5))
martest1<-apriori(mar,parameter = list(support=0.0009,confidence=0.80,minlen=5))
martest1<-apriori(mar,parameter = list(support=0.0005,confidence=0.80,minlen=5))
martest1<-apriori(mar,parameter = list(support=0.0003,confidence=0.80,minlen=5))
martest1<-apriori(mar,parameter = list(support=0.0002,confidence=0.80,minlen=5))
marred1<-is.redundant(martest1)
marred1
martest1<-martest1[!marred1]
martest1
plot(martest1,method = "graph", control=list(type="Description"))
