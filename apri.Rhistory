a<-2+3
a
getwd()
MB
getwd()
setwd(""C:/Users/Arvind/Documents"/mb.csv")
setwd(C:/Users/Arvind/Documents"/mb.csv")
setwd(C://Users//Arvind//Documents//mb.csv")
setwd("C://Users//Arvind//Documents//mb.csv")
setwd("C:/Users/Arvind/Documents/mb.csv")
setwd("C:/Users/Arvind/Documents/R/mb.csv")
setwd("C://Users//Arvind//Documents//R")
mb<-read.csv("C://Users//Arvind//Documents//R//mb.csv")
mb$Quantity[mb$Quantity<0]<-
NA
mb$Quantity[mb$Quantity<0]<-NA
mb$UnitPrice[mb$UnitPrice]<-NA
mb$UnitPrice[mb$UnitPrice<0]<-NA
mbc<-na.omit(mb)
View(mbc)

aggregate(Description ~ InvoiceNo , data = mbc, c)
fix(mb)
View(mbc)
mbc1 <- aggregate(Description ~ InvoiceNo, data = mbc, paste, collapse = ",")
fix(mbc1)
load(arules)
require(arules)
read.transactions(mbc1,sep=",")
read.transactions("mbc1",sep=",")
read.transactions(mbc1,sep=",")
read.transactions(mbc1)
read.transactions(Groceries)
data(mbc1)
data("mbc1")
data("Groceries")
data(mbc1)
read.transactions(data=mbc1,mbc1)
read.transactions(data=mbc1)
data(list=mbc1)
read.transactions(mbc1)
read.transactions(Groceries)
read.transactions(mbc1,sep=",")
data(package'=mbc1)
data(package=mbc1)
fix(mbc1)
data(package=mbc1)
data(package="mbc1")
write.table(mbc1, file = "mbc1.csv", sep=",")
mba<-read.transactions("mbc1.csv",sep=",")
mba
summary(mba)
inspect(mba[1:3])
inspect(mba[2:3])
itemFrequency(mba[,3])
itemFrequency(mba[,1;6])
itemFrequency(mba[,1:6])
itemFrequencyPlot(mba,support=0.20)
itemFrequencyPlot(mba,support=0.10)
fix(mba)
fix(mbc1)
mba<-read.transactions("mbc1.csv",sep=",",cols = c("Description"))
mba<-read.transactions("mbc1.csv",sep=",",cols = c("InvoiceNo","StockCode,"Description"))
mba<-read.transactions("mbc1.csv",sep=",",cols = c("InvoiceNo","StockCode,"Description"))
mba <- read.transactions(
mbc1.csv,
sep = ",",
cols=c("InvoiceNo","StockCode","Description"),
)
mba <- read.transactions(
"mbc1.csv",
sep = ",",
cols=c("InvoiceNo","StockCode","Description"),
)
order_trans <- read.transactions(
file = "mbc1.csv",
sep = ",",
cols=c("InVoiceNo","StockCode",""),
)
order_trans <- read.transactions(
file = "mbc1.csv",
format = "single",
sep = ",",
cols=c("InVoiceNo","StockCode","Description"),
rm.duplicates = T
)
order_trans <- read.transactions(
file = "mbc1.csv",
format = "single",
sep = ",",
cols=c("InVoiceNo","Description"),
rm.duplicates = T
)
order_trans <- read.transactions(
file = "mbc1.csv",
sep = ",",
cols=c("InVoiceNo","StockCode",Description"),
)
order_trans <- read.transactions(
+     file = "mbc1.csv",
+     sep = ",",
+     cols=c("InVoiceNo","Description")
+ )
fix(mba)
mba
fix(mbc1)
mbs <- read.transactions(
file = "mbc1.csv",
format = "single",
sep = ",",
cols=c("InVoiceNo","Description"),
)
fix(mbc1)
mbs <- read.transactions(
file = "mbc1.csv",
format = "single",
sep = ",",
cols=c("InvoiceNo","Description"),
)
mbs <- read.transactions(
file = "mbc1.csv",
format = "single",
sep = ",",
cols=c("InvoiceNo","Description"),
)
mbs
insertClassMethods(mbs[1:2])
inspect(mbs[1:2])
itemFrequency(mbs[,3])
mbs <- read.transactions(
format = "single",
sep = ",",
cols=c("InvoiceNo","Description"),
)
mbs <- read.transactions(
file = "mbc1.csv",
sep = ",",
cols=c("InvoiceNo","Description"),
)
mbs <- read.transactions(
file = "mbc1.csv",
sep = ","
)
mbs
inspect(mbs[1:2])
library(arulesviz)
install.packages("arulesViz")
inspect(mbs[1:2])
mbap<-apriori(mba,parameter = list(support="0.1",confidence="0.5"))
mbap<-apriori(mba,parameter = list(support=0.1,confidence=0.5))
mbaa
mbap
mbap<-apriori(mba,parameter = list(support=0.01,confidence=0.5))
mbap<-apriori(mba,parameter = list(support=0.001,confidence=0.25))
mbap
mbap<-apriori(mba,parameter = list(support=0.001,confidence=0.025))
mbap
mbap<-apriori(mba,parameter = list(support=0.0001,confidence=0.025))
mbap
mbap<-apriori(mba,parameter = list(support=0.0001,confidence=0.025))
mbap<-apriori(mba,parameter = list(support=0.001,confidence=0.025))
mbap
mbap<-apriori(mba,parameter = list(support=0.001,confidence=0.025,minlen=2))
mbap
mbap<-apriori(mba,parameter = list(support=0.0009,confidence=0.025,minlen=2))
mbap
mbap<-apriori(mba,parameter = list(support=0.0008,confidence=0.025,minlen=2))
mbap<-apriori(mba,parameter = list(support=0.0007,confidence=0.025,minlen=2))
mbap<-apriori(mba,parameter = list(support=0.0007,confidence=0.0025,minlen=2))
mbap<-apriori(mba,parameter = list(support=0.0007,confidence=0.25,minlen=2))
mbap
mbap<-apriori(mba,parameter = list(support=0.0007,confidence=0.10,minlen=2))
mbap
